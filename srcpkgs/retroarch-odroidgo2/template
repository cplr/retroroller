# Template file for 'retroarch-odroidgo2'
pkgname=retroarch-odroidgo2
version=1.9.1
revision=2
_gitrev=222d4706daef21be3752e1a1b66033e840694765
wrksrc="RetroArch-${_gitrev}"
build_style=configure
configure_args="--prefix=/usr
 --sysconfdir=/etc
 --disable-discord
 --disable-libusb
 --disable-sdl2
 --disable-vulkan
 --disable-vulkan_display
 --disable-audiomixer
 --disable-x11
 --disable-cdrom
 --disable-video_layout
 --disable-oss
 --disable-opengl_core
 --enable-git_version
 --enable-networking
 --enable-ozone
 --enable-egl
 --enable-kms
 --enable-odroidgo2
 --disable-mpv
 --enable-opengles
 --enable-opengles3
 --enable-wifi
"
hostmakedepends="pkg-config openssh"
makedepends="zlib-devel libxml2-devel freetype-devel
 librga-devel alsa-lib-devel eudev-libudev-devel libdrm-devel MesaLib-devel"
short_desc="Official reference frontend for the libretro API"
license="GPL-3.0-or-later"
homepage="http://www.libretro.com/"
distfiles="https://github.com/cplr/RetroArch/archive/${_gitrev}.tar.gz"
checksum=8716d5516a32802b23d72d8f1a8de610837b6bacf2ffb1d5b138b2ccc4a1bc97
patch_args="-Np1"

export CFLAGS="$CFLAGS -O3 -fno-tree-vectorize"
export CXXFLAGS="$CXXFLAGS -O3 -fno-tree-vectorize"
export ASFLAGS="$CFLAGS"
export LDFLAGS="$LDFLAGS"

if [ "$CROSS_BUILD" ]; then
    configure_args+=" --host=${XBPS_CROSS_TRIPLET}"
fi

case "$XBPS_TARGET_MACHINE" in
	aarch64*)
        configure_args+=" --enable-ffmpeg"
        depends="libretro-core-info retroarch-joypad-autoconfig"
        makedepends+=" ffmpeg-devel"
		;;
	arm*)
        configure_args+=" --enable-neon"
		;;
	*) ;;
esac

post_extract() {
echo "audio_driver = alsathread" >> retroarch.cfg
echo "core_updater_buildbot_cores_url = http://eple.us/retroroller/libretro/aarch64/" >> retroarch.cfg
echo "input_driver = udev" >> retroarch.cfg
echo "input_max_users = 1" >> retroarch.cfg
echo "input_menu_toggle_gamepad_combo = 4" >> retroarch.cfg
echo "joypad_autoconfig_dir = /usr/share/libretro/autoconfig" >> retroarch.cfg
echo "libretro_info_path = /usr/share/libretro/info" >> retroarch.cfg
echo "menu_driver = ozone" >> retroarch.cfg
echo "menu_rgui_shadows = true" >> retroarch.cfg
echo "menu_scale_factor = 1.250000" >> retroarch.cfg
echo "menu_show_advanced_settings = true" >> retroarch.cfg
echo "menu_show_load_content_animation = false" >> retroarch.cfg
echo "menu_timedate_style = 5" >> retroarch.cfg
echo "menu_widget_scale_auto = false" >> retroarch.cfg
echo "menu_widget_scale_factor = 2.0" >> retroarch.cfg
echo "menu_widget_scale_factor_windowed = 2.0" >> retroarch.cfg
echo "ozone_collapse_sidebar = true" >> retroarch.cfg
echo "rgui_aspect_ratio = 5" >> retroarch.cfg
echo "rgui_background_filler_thickness_enable = false" >> retroarch.cfg
echo "rgui_border_filler_enable = false" >> retroarch.cfg
echo "rgui_border_filler_thickness_enable = false" >> retroarch.cfg
echo "rgui_browser_directory = /roms" >> retroarch.cfg
echo "rgui_extended_ascii = true" >> retroarch.cfg
echo "rgui_inline_thumbnails = true" >> retroarch.cfg
echo "rgui_menu_color_theme = 20" >> retroarch.cfg
echo "rgui_particle_effect = 4" >> retroarch.cfg
echo "rgui_particle_effect_speed = 0.300000" >> retroarch.cfg
echo "savefile_directory = /roms/saves" >> retroarch.cfg
echo "system_directory = /roms/bios" >> retroarch.cfg
echo "video_driver = glcore" >> retroarch.cfg
echo "video_font_size = 12.000000" >> retroarch.cfg
echo "video_threaded = true" >> retroarch.cfg
echo "wifi_driver = nmcli" >> retroarch.cfg
echo "input_enable_hotkey_btn = 14" >> retroarch.cfg
echo "input_fps_toggle_btn = 3" >> retroarch.cfg
echo "input_save_state_btn = 5" >> retroarch.cfg
echo "input_load_state_btn = 4" >> retroarch.cfg
echo "input_pause_toggle_btn = 0" >> retroarch.cfg
echo "input_menu_toggle_btn = 15" >> retroarch.cfg
echo "input_toggle_fast_forward_btn = 1" >> retroarch.cfg
echo "rgui_aspect_ratio_lock = 1" >> retroarch.cfg
}

do_configure() {
	./configure ${configure_args}
}

pre_build() {
	vsed -i gfx/drivers_context/drm_go2_ctx.c -e "s:<drm/drm_fourcc.h>:<libdrm/drm_fourcc.h>:" 
	vsed -i deps/libgo2/src/display.c -e "s:<drm/drm_fourcc.h>:<libdrm/drm_fourcc.h>:" 
	vsed -i gfx/drivers/oga_gfx.c -e "s:<drm/drm_fourcc.h>:<libdrm/drm_fourcc.h>:" 
}

do_build() {
    make -j$(nproc) GIT_VERSION=${_gitrev} V=1
}

post_install() {
    vinstall retroarch.cfg 644 etc
    vsv retroarch
}

